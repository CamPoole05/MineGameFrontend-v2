{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cpoole01\\\\OneDrive - Hearst\\\\Documents\\\\Desktop\\\\Repos\\\\MineGameFrontEnd\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      const apiUrl = 'https://localhost:7095/api/hello?width=6&height=6';\n      const response = await fetch(apiUrl);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Grid Data:', data);\n        const grid = \"\";\n        // Now you can work with the returned JSON data\n        // For example, you can loop through rows and columns\n        for (const key in data) {\n          if (data.hasOwnProperty(key)) {\n            const rowArray = data[key];\n            console.log(`Row ${key}:`, rowArray);\n            grid += rowArray + \"<br>\";\n          }\n        }\n        document.getElementById(\"grid\").innerText = grid;\n      } else {\n        console.error(`HTTP error! Status: ${response.status}`);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mine Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","App","_s","fetchData","apiUrl","response","fetch","ok","data","json","console","log","grid","key","hasOwnProperty","rowArray","document","getElementById","innerText","error","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/cpoole01/OneDrive - Hearst/Documents/Desktop/Repos/MineGameFrontEnd/my-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useEffect } from 'react';\n\n\nfunction App() {\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const apiUrl = 'https://localhost:7095/api/hello?width=6&height=6';\n      const response = await fetch(apiUrl);\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Grid Data:', data);\n        const grid = \"\"\n        // Now you can work with the returned JSON data\n        // For example, you can loop through rows and columns\n        for (const key in data) {\n          if (data.hasOwnProperty(key)) {\n            const rowArray = data[key];\n            console.log(`Row ${key}:`, rowArray);\n            grid += rowArray + \"<br>\"\n          }\n        }\n        document.getElementById(\"grid\").innerText = grid;\n\n\n      } else {\n        console.error(`HTTP error! Status: ${response.status}`);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Mine Game</h1>\n      </header>\n      <div className=\"App-body\">\n        <p id=\"grid\"></p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEbJ,SAAS,CAAC,MAAM;IACd,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,MAAM,GAAG,mDAAmD;MAClE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;MAEpC,IAAIC,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,IAAI,CAAC;QAC/B,MAAMI,IAAI,GAAG,EAAE;QACf;QACA;QACA,KAAK,MAAMC,GAAG,IAAIL,IAAI,EAAE;UACtB,IAAIA,IAAI,CAACM,cAAc,CAACD,GAAG,CAAC,EAAE;YAC5B,MAAME,QAAQ,GAAGP,IAAI,CAACK,GAAG,CAAC;YAC1BH,OAAO,CAACC,GAAG,CAAE,OAAME,GAAI,GAAE,EAAEE,QAAQ,CAAC;YACpCH,IAAI,IAAIG,QAAQ,GAAG,MAAM;UAC3B;QACF;QACAC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,SAAS,GAAGN,IAAI;MAGlD,CAAC,MAAM;QACLF,OAAO,CAACS,KAAK,CAAE,uBAAsBd,QAAQ,CAACe,MAAO,EAAC,CAAC;MACzD;IACF,CAAC;IAEDjB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAQqB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BtB,OAAA;QAAAsB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACT1B,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBtB,OAAA;QAAG2B,EAAE,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAzCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
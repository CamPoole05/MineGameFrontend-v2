{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cpoole01\\\\OneDrive - Hearst\\\\Documents\\\\Desktop\\\\Repos\\\\MineGameFrontEnd\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gridData, setGridData] = useState([]);\n  const [data, setData] = useState('');\n  async function makeMove() {\n    const stringGrid = gridData.map(row => row.join(',')).join(';'); // Convert 2D array to a string\n    const rowWidth = gridData[0].length;\n    const apiUrl = `https://localhost:7095/api/makemove?minesHit=0&stringGrid=${stringGrid}&rowWidth=${rowWidth}&dir=u`;\n    console.log(apiUrl);\n    const gridresponse = await fetch(apiUrl);\n    const result = await gridresponse.json();\n    console.log(result);\n\n    // Update gridData with the new grid data from the response\n    //setGridData();\n\n    // Update data with the modified grid for display\n    //const newData = /* Modify gridData as needed for display */;\n    //setData(newData);\n  }\n  useEffect(() => {\n    async function getGrid() {\n      const response = await fetch('https://localhost:7095/api/hello?width=6&height=6');\n      const json = await response.json();\n      let newData = '';\n      let gridDataArray = [];\n      for (const key in json) {\n        if (json.hasOwnProperty(key)) {\n          const rowArray = json[key];\n          gridDataArray.push(rowArray);\n          const updatedRow = rowArray.map(cell => cell === 'M' ? '-' : cell);\n          console.log(`Row ${key}:`, updatedRow);\n          newData += '|' + updatedRow.join('|') + '|<br>';\n        }\n      }\n      console.log(gridDataArray);\n      setGridData(gridDataArray);\n      setData(newData);\n    }\n    getGrid();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mine Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"grid\",\n        dangerouslySetInnerHTML: {\n          __html: data || 'Loading...'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: makeMove,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ozLpw8LB+41P5HXFmvkUQ9cn2pQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","gridData","setGridData","data","setData","makeMove","stringGrid","map","row","join","rowWidth","length","apiUrl","console","log","gridresponse","fetch","result","json","getGrid","response","newData","gridDataArray","key","hasOwnProperty","rowArray","push","updatedRow","cell","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cpoole01/OneDrive - Hearst/Documents/Desktop/Repos/MineGameFrontEnd/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [gridData, setGridData] = useState([]);\n  const [data, setData] = useState('');\n\n  async function makeMove() {\n    const stringGrid = gridData.map(row => row.join(',')).join(';'); // Convert 2D array to a string\n    const rowWidth = gridData[0].length;\n\n    const apiUrl = `https://localhost:7095/api/makemove?minesHit=0&stringGrid=${stringGrid}&rowWidth=${rowWidth}&dir=u`;\n\n    console.log(apiUrl);\n\n    const gridresponse = await fetch(apiUrl);\n    const result = await gridresponse.json();\n    console.log(result);\n\n    // Update gridData with the new grid data from the response\n    //setGridData();\n\n    // Update data with the modified grid for display\n    //const newData = /* Modify gridData as needed for display */;\n    //setData(newData);\n  }\n\n  useEffect(() => {\n    async function getGrid() {\n      const response = await fetch('https://localhost:7095/api/hello?width=6&height=6');\n      const json = await response.json();\n      let newData = '';\n      let gridDataArray = [];\n      for (const key in json) {\n        if (json.hasOwnProperty(key)) {\n          const rowArray = json[key];\n          gridDataArray.push(rowArray);\n          const updatedRow = rowArray.map(cell => (cell === 'M' ? '-' : cell));\n          console.log(`Row ${key}:`, updatedRow);\n          newData += '|' + updatedRow.join('|') + '|<br>';\n        }\n      }\n      console.log(gridDataArray);\n      setGridData(gridDataArray);\n      setData(newData);\n    }\n\n    getGrid();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Mine Game</h1>\n      </header>\n      <div className=\"App-body\">\n        <p id=\"grid\" dangerouslySetInnerHTML={{ __html: data || 'Loading...' }}></p>\n        <div onClick={makeMove}>\n          <p>Move</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeS,QAAQA,CAAA,EAAG;IACxB,MAAMC,UAAU,GAAGL,QAAQ,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACjE,MAAMC,QAAQ,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAACU,MAAM;IAEnC,MAAMC,MAAM,GAAI,6DAA4DN,UAAW,aAAYI,QAAS,QAAO;IAEnHG,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IAEnB,MAAMG,YAAY,GAAG,MAAMC,KAAK,CAACJ,MAAM,CAAC;IACxC,MAAMK,MAAM,GAAG,MAAMF,YAAY,CAACG,IAAI,CAAC,CAAC;IACxCL,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;;IAEnB;IACA;;IAEA;IACA;IACA;EACF;EAEAtB,SAAS,CAAC,MAAM;IACd,eAAewB,OAAOA,CAAA,EAAG;MACvB,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAAC,mDAAmD,CAAC;MACjF,MAAME,IAAI,GAAG,MAAME,QAAQ,CAACF,IAAI,CAAC,CAAC;MAClC,IAAIG,OAAO,GAAG,EAAE;MAChB,IAAIC,aAAa,GAAG,EAAE;MACtB,KAAK,MAAMC,GAAG,IAAIL,IAAI,EAAE;QACtB,IAAIA,IAAI,CAACM,cAAc,CAACD,GAAG,CAAC,EAAE;UAC5B,MAAME,QAAQ,GAAGP,IAAI,CAACK,GAAG,CAAC;UAC1BD,aAAa,CAACI,IAAI,CAACD,QAAQ,CAAC;UAC5B,MAAME,UAAU,GAAGF,QAAQ,CAAClB,GAAG,CAACqB,IAAI,IAAKA,IAAI,KAAK,GAAG,GAAG,GAAG,GAAGA,IAAK,CAAC;UACpEf,OAAO,CAACC,GAAG,CAAE,OAAMS,GAAI,GAAE,EAAEI,UAAU,CAAC;UACtCN,OAAO,IAAI,GAAG,GAAGM,UAAU,CAAClB,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO;QACjD;MACF;MACAI,OAAO,CAACC,GAAG,CAACQ,aAAa,CAAC;MAC1BpB,WAAW,CAACoB,aAAa,CAAC;MAC1BlB,OAAO,CAACiB,OAAO,CAAC;IAClB;IAEAF,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAK+B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhC,OAAA;MAAQ+B,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BhC,OAAA;QAAAgC,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACTpC,OAAA;MAAK+B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBhC,OAAA;QAAGqC,EAAE,EAAC,MAAM;QAACC,uBAAuB,EAAE;UAAEC,MAAM,EAAElC,IAAI,IAAI;QAAa;MAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5EpC,OAAA;QAAKwC,OAAO,EAAEjC,QAAS;QAAAyB,QAAA,eACrBhC,OAAA;UAAAgC,QAAA,EAAG;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CA5DQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AA8DZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}